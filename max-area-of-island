class Solution {
public:

    void dfs(int &area,vector<vector<int>>& grid,int i,int j, int row,int col)
    {
        if(i < 0  || j < 0 || i >= row || j >= col)
        {
            return;
        }
        if(grid[i][j] == 0)
            return ;

        area++;
        grid[i][j]=0;

        dfs(area,grid,i-1,j,row,col);
        dfs(area,grid,i+1,j,row,col);
        dfs(area,grid,i,j-1,row,col);
        dfs(area,grid,i,j+1,row,col);


    }
    int maxAreaOfIsland(vector<vector<int>>& grid) {
        int maxArea=0;

        int row=grid.size();
        int col = grid[0].size();

        for(int i=0;i<row;i++)
        {
            for(int j=0;j<col;j++)

            {
                if(grid[i][j] == 1){
                    int area =0;
                    dfs(area,grid,i,j,row,col);
                    maxArea = max(area,maxArea);
                }
            }
        }    
        return maxArea;
    }
};
