/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:
  int height(TreeNode *root)
  {
       if(root==NULL)
           {
                return 0;
           }
      int left=height(root->left);
    int right= height(root->right);

    int ans=max(left,right)+1;
    return ans;

  }
    bool isBalanced(TreeNode* root) {
           if(root==NULL)
           {
                return true;
           }
        //    if(root->left ==NULL && !root->right)
        //     return true;
        //    if(root->left ==NULL || !root->right)
        //     return false;
        bool left = isBalanced(root->left);
        bool right=isBalanced(root->right);
        int heightL=height(root->left);
        int heightR = height(root->right);
         
        if((heightL-heightR <= 1 && heightL-heightR >=-1) && left and right)
        {
            return true;
        }else
        return false;

    }
};
