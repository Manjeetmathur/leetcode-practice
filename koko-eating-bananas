class Solution {
public:
    int findMax(vector<int>&piles)
    {
        int maxi=INT_MIN;
        for(int i=0;i<piles.size();i++)
        {
            maxi=max(maxi,piles[i]);
        }
        return maxi;
    }
    int minEatingSpeed(vector<int>& piles, int h) {
        int left=1;
        int right=findMax(piles);
        while(left< right)
        {
            int mid=left + (right-left)/2;
            if(canEatInTime(piles,mid,h))
                right=mid;
            else    
                left=mid+1;
        }
        return left;
    }
    bool canEatInTime(vector<int> &piles,int k,int h)
    {
        double hours=0;
        for(int pile : piles)
        {
            double div=pile/k;
            hours += div;
            if(pile % k != 0)
                hours++;
        }
        return hours <= h;
    }
};
